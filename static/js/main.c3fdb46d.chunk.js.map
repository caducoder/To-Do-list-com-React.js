{"version":3,"sources":["components/Header.js","components/Task.js","components/Tasks.js","components/Button.js","components/AddTask.js","components/TaskDetails.js","App.js","index.js"],"names":["Header","Task","task","handleTaskClick","handleTaskDelete","history","useHistory","className","style","completed","borderLeft","onClick","id","title","push","split","join","Tasks","tasks","map","Button","children","AddTask","handleTaskAddition","useState","inputData","setInputData","handleAddTaskClick","onChange","ev","target","value","onKeyUp","keyCode","type","TaskDetails","params","useParams","console","log","goBack","taskTitle","App","setTasks","useEffect","taskId","newTasks","uuidv4","filter","basename","process","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"yVAMeA,EAJA,WACZ,OAAO,iD,QCuCKC,G,MAnCF,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,iBAC7BC,EAAUC,cAUhB,OACG,sBACGC,UAAU,iBACVC,MAAON,EAAKO,UAAY,CAACC,WAAY,wBAA0B,GAFlE,UAIG,qBACGH,UAAU,aACVI,QAAS,kBAAMR,EAAgBD,EAAKU,KAFvC,SAIIV,EAAKW,QAGT,sBAAKN,UAAU,oBAAf,UACG,yBAAQA,UAAU,mBAAmBI,QArBf,WAC5BN,EAAQS,KAAR,WAAiBZ,EAAKW,MAAME,MAAM,KAAKC,KAAK,QAoBtC,UACG,cAAC,IAAD,IADH,OAGA,yBAAQT,UAAU,cAAcI,QAAS,kBAAMP,EAAiBF,EAAKU,KAArE,UACG,cAAC,IAAD,IADH,eCbGK,EAhBD,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOf,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,iBACtC,OACG,mCAEIc,EAAMC,KAAI,SAACjB,GAAD,OACR,cAAC,EAAD,CAEGA,KAAMA,EACNC,gBAAiBA,EACjBC,iBAAkBA,GAHbF,EAAKU,UCCVQ,G,MARA,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUV,EAAa,EAAbA,QACxB,OACG,wBAAQA,QAASA,EAASJ,UAAU,SAApC,SACIc,MCiCKC,G,MApCC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAChB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAeMC,EAAqB,WACxBJ,EAAmBE,GACnBC,EAAa,KAGhB,OACG,sBAAKnB,UAAU,qBAAf,UACG,uBACAqB,SApBoB,SAACC,GAExBH,EAAaG,EAAGC,OAAOC,QAmBpBC,QAhBmB,SAACH,GACL,KAAfA,EAAGI,SACHN,KAeAI,MAAON,EACPlB,UAAU,iBACV2B,KAAK,SACL,qBAAK3B,UAAU,4BAAf,SACG,cAAC,EAAD,CAAQI,QAASgB,EAAjB,8BCDGQ,G,MA3BK,WAEjB,IAAMC,EAASC,cACThC,EAAUC,cAQhB,OAFAgC,QAAQC,IAAI,eAAgBH,GAGzB,qCACG,qBAAK7B,UAAU,wBAAf,SACG,cAAC,EAAD,CAAQI,QARa,WAC3BN,EAAQmC,UAOF,sBAEH,sBAAKjC,UAAU,yBAAf,UACG,6BAAK6B,EAAOK,YACZ,2QCwEGC,G,YApFH,WAGV,MAA0BlB,mBAAS,IAAnC,mBAAON,EAAP,KAAcyB,EAAd,KAGAC,qBAAU,cAOP,IAGH,IAAMzC,EAAkB,SAAC0C,GAEvB,IAAMC,EAAW5B,EAAMC,KAAI,SAAAjB,GACzB,OAAGA,EAAKU,KAAOiC,EAAe,2BAAI3C,GAAX,IAAiBO,WAAYP,EAAKO,YAElDP,KAITyC,EAASG,IAILvB,EAAqB,SAACkB,GAE1B,GAAiB,KAAdA,EAAiB,CAClB,IAAMK,EAAQ,sBACT5B,GADS,CAEZ,CACEL,MAAO4B,EACP7B,GAAImC,cACJtC,WAAW,KAKfkC,EAASG,KAKP1C,EAAmB,SAACyC,GACxB,IAAMC,EAAW5B,EAAM8B,QAAO,SAAA9C,GAAI,OAAIA,EAAKU,KAAOiC,KAGlDF,EAASG,IAOX,OACE,cAAC,IAAD,CAAQG,SAAUC,0BAAlB,SACE,sBAAK3C,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CACE4C,KAAK,IACLC,OAAK,EACLC,OAAQ,kBACN,qCACE,cAAC,EAAD,CAAS9B,mBAAsBA,IAC/B,cAAC,EAAD,CACEL,MAAOA,EACPf,gBAAiBA,EACjBC,iBAAkBA,UAO1B,cAAC,IAAD,CAAO+C,KAAK,cAAcC,OAAK,EAACE,UAAWnB,WCnFnDoB,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.c3fdb46d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n   return <h1>Minhas Tarefas</h1>;\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport {CgClose, CgInfo} from 'react-icons/cg';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport './Task.css';\r\n\r\n//Componente tarefa\r\nconst Task = ({task, handleTaskClick, handleTaskDelete}) => {\r\n   const history = useHistory();\r\n\r\n   const handleTaskDetailsClick = () => {\r\n      history.push(`/${task.title.split(\"/\").join(\"-\")}`);\r\n      /**passando o nome da task como nome da rota que\r\n       * ficará na URL. Fiz a substituição de todos os \"/\"\r\n       * por \"-\", pois a URL considera a barra como uma rota.\r\n       */\r\n   }\r\n\r\n   return ( \r\n      <div \r\n         className=\"task-container\" \r\n         style={task.completed ? {borderLeft: '6px solid chartreuse'} : {}}\r\n      >\r\n         <div \r\n            className=\"task-title\" \r\n            onClick={() => handleTaskClick(task.id)}\r\n         >\r\n            {task.title}\r\n         </div>\r\n         \r\n         <div className=\"buttons-container\">\r\n            <button className=\"see-task-details\" onClick={handleTaskDetailsClick}>\r\n               <CgInfo /> {/* ícone de detalhes da tarefa */}\r\n            </button>\r\n            <button className=\"task-delete\" onClick={() => handleTaskDelete(task.id)}>\r\n               <CgClose /> {/* ícone de deletar tarefa */}\r\n            </button>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task';\r\n\r\n//Lista de tarefas\r\nconst Tasks = ({ tasks, handleTaskClick, handleTaskDelete }) => {\r\n   return (\r\n      <>\r\n         {/* Mapeando as tasks e lançando um componente para cada uma */}\r\n         {tasks.map((task) => (\r\n            <Task \r\n               key={task.id} //key único para ajudar o React a diferenciar cada task\r\n               task={task} \r\n               handleTaskClick={handleTaskClick} \r\n               handleTaskDelete={handleTaskDelete} \r\n            />\r\n         ))}\r\n      </>\r\n   )\r\n};\r\n\r\nexport default Tasks;","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = ({children, onClick}) => {\r\n   return ( \r\n      <button onClick={onClick} className=\"button\">\r\n         {children}\r\n      </button>\r\n    );\r\n}\r\n \r\nexport default Button;","import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport './AddTask.css';\r\n\r\nconst AddTask = ({ handleTaskAddition }) => {\r\n   const [inputData, setInputData] = useState(\"\");\r\n\r\n   //handle = lidar, convenção do react colocar handle em funções passadas para onChange\r\n   const handleInputChange = (ev) => {\r\n      //pega o que foi digitado\r\n      setInputData(ev.target.value);\r\n   };\r\n\r\n   const handlePressEnter = (ev) => {\r\n      if(ev.keyCode === 13){\r\n         handleAddTaskClick();\r\n      }\r\n      \r\n   }\r\n\r\n   const handleAddTaskClick = () => {\r\n      handleTaskAddition(inputData);\r\n      setInputData(\"\");\r\n   };\r\n\r\n   return ( \r\n      <div className=\"add-task-container\">\r\n         <input \r\n         onChange={handleInputChange}\r\n         onKeyUp={handlePressEnter} \r\n         value={inputData}  \r\n         className=\"add-task-input\"  \r\n         type=\"text\" />\r\n         <div className=\"add-task-button-container\">\r\n            <Button onClick={handleAddTaskClick}>Adicionar</Button>\r\n         </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport Button from './Button';\r\nimport './TaskDetails.css'\r\n\r\nconst TaskDetails = () => {\r\n   //useParams(): retorna os parâmetros que estão sendo utilizados na URL\r\n   const params = useParams();\r\n   const history = useHistory();\r\n\r\n   //função para voltar quando usuário clicar no botão voltar\r\n   const handleBackButtonClick = () => {\r\n      history.goBack();\r\n   }\r\n   console.log(\"parametros: \", params)\r\n\r\n   return ( \r\n      <>\r\n         <div className=\"back-button-container\">\r\n            <Button onClick={handleBackButtonClick}>Voltar</Button>\r\n         </div>\r\n         <div className=\"task-details-container\">\r\n            <h2>{params.taskTitle}</h2>\r\n            <p>\r\n               Lorem ipsum, dolor sit amet consectetur adipisicing elit. \r\n               Accusantium beatae aliquam nulla non voluptate deleniti reprehenderit expedita quia omnis cumque. Consequuntur inventore qui dolor quae harum! Qui odit voluptatem enim.\r\n            </p>\r\n         </div>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default TaskDetails;","//Primeira coisa a fazer em todos os componentes React\nimport React, { useEffect, useState } from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport TaskDetails from './components/TaskDetails';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  //para mudar a mensagem, precisa ser um state\n  //a task está aqui pq o componente AddTask precisa acessá-la\n  const [tasks, setTasks] = useState([]);\n\n  //requisitando tarefas de uma API Fake para adicionar tasks na primeira vez que renderizar o componente.\n  useEffect(() => {\n    // const fetchTasks = async () => {\n    //   const { data } = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=4');\n    //   setTasks(data);\n    // };\n\n    // fetchTasks();\n  }, []);//executa somente na primeira vez pq os colchetes estão vazios.\n\n  //função para lidar com o clique na task, alternando entre true e false (borda esquerda verde)\n  const handleTaskClick = (taskId) => {\n    //verificando em qual task o usuário clicou, por meio do id, e mudando o 'completed'\n    const newTasks = tasks.map(task => {\n      if(task.id === taskId) return {...task, completed: !task.completed}\n\n      return task;\n    });\n\n    //atualizando lista\n    setTasks(newTasks);\n  }\n\n  //função que adiciona uma nova tarefa na lista\n  const handleTaskAddition = (taskTitle) => {\n    //verificando se o input não está vazio\n    if(taskTitle !== \"\"){\n      const newTasks = [\n        ...tasks, \n        {\n          title: taskTitle,\n          id: uuidv4(),\n          completed: false,\n        }\n      ];\n\n      //atualizando lista\n      setTasks(newTasks);\n    } \n  };\n\n  //função que deleta tarefa\n  const handleTaskDelete = (taskId) => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n\n    //atualizando lista\n    setTasks(newTasks);\n  }\n\n\n  //classe no react é 'className'\n  //só pode retornar apenas um elemento, senão da erro\n  //<></> <- esta tag é chamada de fragments e funciona\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"container\">\n        <Header />\n        <Route \n          path=\"/\" //rota da página inicial\n          exact //para a rota ser exatamente igual ao path\n          render={() => (\n            <>\n              <AddTask handleTaskAddition = {handleTaskAddition}/>\n              <Tasks \n                tasks={tasks} \n                handleTaskClick={handleTaskClick} \n                handleTaskDelete={handleTaskDelete} \n              />\n            </>\n          )}\n        />\n\n        {/* Rota para os detalhes da tarefa */}\n        <Route path=\"/:taskTitle\" exact component={TaskDetails} />\n      </div>\n    </Router>\n  )\n}\n\nexport default App;//pq o index.js importa o App, aí a gente precisa exportar\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  //pega a div root e renderiza o componetne App\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}